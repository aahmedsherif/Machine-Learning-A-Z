install.packages("devtools")
x <- c(4,True)
x <- c(4,TRUE)
class(x)
x
x <- c(1,3,5)
y <- c(3,2,10)
z <- cbind(x,y)
z
x <- list(2, "a", "b", TRUE)
x[[1]]
x < 1:4
x <- 1:4
y <- 2:3
x+ y
x <- c(17, 14, 4, 5, 13, 12, 10)
c
x
x[x > 10] <- 4
x
read.csv("C:\Users\ِasherif\Downloads\quiz1_dat\hw1_data.csv", header = TRUE, sep = ",", quote = "\"",
dec = ".", fill = TRUE, comment.char = "", ...)
read.csv(C:\Users\ِasherif\Downloads\quiz1_dat\hw1_data.cs", header = TRUE, sep = ",", quote = "\"",
dec = ".", fill = TRUE, comment.char = "", ...)
df <- read.csv("C:\Users\ِasherif\Downloads\quiz1_dat\hw1_data.csv", header=TRUE)
df <- read.csv("quiz1_dat\hw1_data.csv", header=TRUE)
df <- read.csv("quiz1_dat\\hw1_data.csv", header=TRUE)
df <- read.csv("\\quiz1_dat\\hw1_data.csv", header=TRUE)
df <- read.csv("\\quiz1_data\\hw1_data.csv", header=TRUE)
df <- read.csv("quiz1_data\\hw1_data.csv", header=TRUE)
df <- read.csv("F:\\Content\\Document\\DataScience\\Coursera\\quiz1_data", header=TRUE)
df <- read.csv("F:\\Content\\Document\\DataScience\\Coursera\\quiz1_data.csv", header=TRUE)
df <- read.csv("F:\\Content\\Document\\DataScience\\Coursera\\quiz1_data\\hw1_data.csv", header=TRUE)
df
head (df, 2)
nrows(df)
nrow(df)
tail(df,2)
df[140]
df[74]
df[74,]
df[47,]
sum(is.na(df$Ozone))
mean(x[[Ozone]])
mean(x[[ozone]])
mean(x$Ozone)
mean(df$Ozone)
sum(!is.na(df$Ozone))
sum(df$Ozone)
colSums(df, na,rm=FALSE, dimnames(df$Ozone))
colSums(df, na.rm=FALSE, dimnames(df$Ozone))
colSums(df, na.rm=FALSE, df$Ozone )
colSums(df, na.rm=FALSE, dims = 1)
colSums(df, na.rm=TRUE, dims = 1)
colSums(df, na.rm=TRUE, dims = 2)
colSums(df, na.rm=TRUE, dims = 2)
mean(df)
mean(df$Ozone[!is.na(df$Ozone)])
mean(df$Solar.R[!is.na(df$Solar.R)] && df$Ozone > 31)
mean(df$Solar.R[!is.na(df$Solar.R)] )
mean(df$Solar.R[!is.na(df$Solar.R)] and df$Ozone > 31)
mean(df$Solar.R[!is.na(df$Solar.R) && df$Ozone > 31] )
y <= subset(df, df$Ozone > 31 & df$Temp > 90)
y
y
y <- subset(df, df$Ozone > 31 & df$Temp > 90)
y
mean(y$Solar.R[!is.na(y$Solar.R)])
z <- subset(df, df$Month == 6)
z
mean(z$Temp)
max(df$Ozone[df$Month==5], na.rm=FALSE)
t <- subset(df, df$Month == 5)
t
max(t$Ozone[!is.na(t$Ozone)])
savehistory("F:/Content/Document/DataScience/Coursera/history1.Rhistory")
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
install.packages("swirl")
library(swirl)
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6==7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTrue(6 > 4)
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints)
any(ints < 0)
all(ints > 0\)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
submit()
boring_function('My first function!')
boring_function
submit()
submit()
submit()
submit()
submit()
my_mean(c(4,5,10))
submit()
reminfer(5)
reminder(5)
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
(4, div = 2)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[0]}, 6)
evaluate(function(x){x[1]}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){length(x)}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram ("H1" , "H2")
submit()
submit()
submit()
submit()
mad_libs(place="place" , adjective="adjective" ,noun="noun" )
submit()
'I' %p% 'love' %p% 'R'
'I' %p% 'love' %p% 'R!'
library(datasets)
data(iris)
library(datasets)
data("iris")
swirl()
library(swirl)
swirl(0)
packageVersion("swirl")
library(swirl)
install_from_swirl("Statistical Inference")
install_from_swirl("Statistical Inference")
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
swirl()
setwd("F:/Content/Document/Udemy/Machine-Learning/Machine Learning A-Z/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------")
setwd("F:/Content/Document/Udemy/Machine-Learning/Machine Learning A-Z/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------")
dataset = read.csv("Data.csv")
#taking care of missing values
dataset$Age = ifelse(is.na(dataset$Age), ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)), dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary), ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)), dataset$Salary)
# Encoding categorial data
dataset$Country = factor(dataset$Country, levels = c("France", "Spain", "Germany"), labels=c(1,2,3))
dataset$Purchased = factor(dataset$Purchased, levels = c("No", "Yes"), labels=c(0,1))
# Spreading the dataset into Training set and Data set
#install.packages("caTools")
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio=0.8)
training_set = subset(dataset, split==TRUE)
test_set = subset(dataset, split==FALSE)
# Feature Scaling
training_set[,2:3] = scale(training_set[,2:3])
test_set[,2:3] = scale(test_set[,2:3])
